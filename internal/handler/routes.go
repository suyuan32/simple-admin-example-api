// Code generated by goctl. DO NOT EDIT.
// goctls v1.10.2

package handler

import (
	"net/http"

	base "github.com/suyuan32/simple-admin-example-api/internal/handler/base"
	student "github.com/suyuan32/simple-admin-example-api/internal/handler/student"
	teacher "github.com/suyuan32/simple-admin-example-api/internal/handler/teacher"
	"github.com/suyuan32/simple-admin-example-api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodGet,
				Path:    "/init/database",
				Handler: base.InitDatabaseHandler(serverCtx),
			},
		},
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/student/create",
					Handler: student.CreateStudentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/student/update",
					Handler: student.UpdateStudentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/student/delete",
					Handler: student.DeleteStudentHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/student/list",
					Handler: student.GetStudentListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/student",
					Handler: student.GetStudentByIdHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.Authority},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/teacher/create",
					Handler: teacher.CreateTeacherHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/teacher/update",
					Handler: teacher.UpdateTeacherHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/teacher/delete",
					Handler: teacher.DeleteTeacherHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/teacher/list",
					Handler: teacher.GetTeacherListHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/teacher",
					Handler: teacher.GetTeacherByIdHandler(serverCtx),
				},
			}...,
		),
		rest.WithJwt(serverCtx.Config.Auth.AccessSecret),
	)
}
