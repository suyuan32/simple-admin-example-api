// Code generated by goctl. DO NOT EDIT.
package types

// The basic response with data | 基础带数据信息
// swagger:model BaseDataInfo
type BaseDataInfo struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response with data | 基础带数据信息
// swagger:model BaseListInfo
type BaseListInfo struct {
	// The total number of data | 数据总数
	Total uint64 `json:"total"`
	// Data | 数据
	Data string `json:"data,omitempty"`
}

// The basic response without data | 基础不带数据信息
// swagger:model BaseMsgResp
type BaseMsgResp struct {
	// Error code | 错误代码
	Code int `json:"code"`
	// Message | 提示信息
	Msg string `json:"msg"`
}

// The page request parameters | 列表请求参数
// swagger:model PageInfo
type PageInfo struct {
	// Page number | 第几页
	// required : true
	// min : 0
	Page uint64 `json:"page" validate:"required,number,gt=0"`
	// Page size | 单页数据行数
	// required : true
	// max : 100000
	PageSize uint64 `json:"pageSize" validate:"required,number,lt=100000"`
}

// Basic ID request | 基础ID参数请求
// swagger:model IDReq
type IDReq struct {
	// ID
	// Required: true
	Id uint64 `json:"id" validate:"number"`
}

// Basic IDs request | 基础ID数组参数请求
// swagger:model IDsReq
type IDsReq struct {
	// IDs
	// Required: true
	Ids []uint64 `json:"ids"`
}

// Basic ID request | 基础ID地址参数请求
// swagger:model IDPathReq
type IDPathReq struct {
	// ID
	// Required: true
	Id uint64 `path:"id"`
}

// Basic UUID request in path | 基础UUID地址参数请求
// swagger:model UUIDPathReq
type UUIDPathReq struct {
	// ID
	// Required: true
	Id string `path:"id"`
}

// Basic UUID request | 基础UUID参数请求
// swagger:model UUIDReq
type UUIDReq struct {
	// ID
	// required : true
	// max length : 36
	// min length : 36
	Id string `json:"id" validate:"required,len=36"`
}

// Basic UUID array request | 基础UUID数组参数请求
// swagger:model UUIDsReq
type UUIDsReq struct {
	// Ids
	// Required: true
	Ids []string `json:"ids"`
}

// The base ID response data | 基础ID信息
// swagger:model BaseIDInfo
type BaseIDInfo struct {
	// ID
	Id *uint64 `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The base UUID response data | 基础UUID信息
// swagger:model BaseUUIDInfo
type BaseUUIDInfo struct {
	// ID
	Id *string `json:"id,optional"`
	// Create date | 创建日期
	CreatedAt *int64 `json:"createdAt,optional"`
	// Update date | 更新日期
	UpdatedAt *int64 `json:"updatedAt,optional"`
}

// The response data of student information | Student信息
// swagger:model StudentInfo
type StudentInfo struct {
	BaseUUIDInfo
	// Status 1: normal 2: ban | 状态 1 正常 2 禁用
	Status *uint32 `json:"status,optional"`
	// Student name | 学生姓名
	Name *string `json:"name,optional"`
	// Student age | 学生年龄
	Age *int32 `json:"age,optional"`
	// Student's home address | 学生家庭住址
	Address *string `json:"address,optional"`
	// Student's score | 学生分数
	Score *int32 `json:"score,optional"`
	// Student's weight | 学生体重
	Weight *uint32 `json:"weight,optional"`
	// Whether is healthy | 是否健康
	Healthy *bool `json:"healthy,optional"`
	// Student's code | 学生编码
	Code *int64 `json:"code,optional"`
	// Student's identify_id | 学生身份证号
	IdentifyId *string `json:"identifyId,optional"`
	// Student's height | 身高
	Height *int64 `json:"height,optional"`
	// Expired At | 到期时间
	ExpiredAt *int64 `json:"expiredAt,optional"`
	// Student's number | 学生号码
	StudentNumber *string `json:"studentNumber,optional"`
}

// The response data of student list | Student信息列表数据
// swagger:model StudentListResp
type StudentListResp struct {
	BaseDataInfo
	// Student list data | Student信息列表数据
	Data StudentListInfo `json:"data"`
}

// The student list data | Student信息列表数据
// swagger:model StudentListInfo
type StudentListInfo struct {
	BaseListInfo
	// The student list data | Student信息列表数据
	Data []StudentInfo `json:"data"`
}

// Get student list request params | Student列表请求参数
// swagger:model StudentListReq
type StudentListReq struct {
	PageInfo
	// Status
	Status *uint32 `json:"status,optional"`
	// Name
	Name *string `json:"name,optional"`
	// Age
	Age *int32 `json:"age,optional"`
	// Address
	Address *string `json:"address,optional"`
	// Score
	Score *int32 `json:"score,optional"`
	// Weight
	Weight *uint32 `json:"weight,optional"`
	// Healthy
	Healthy *bool `json:"healthy,optional"`
	// Code
	Code *int64 `json:"code,optional"`
	// IdentifyId
	IdentifyId *string `json:"identifyId,optional"`
	// Height
	Height *int64 `json:"height,optional"`
	// ExpiredAt
	ExpiredAt *int64 `json:"expiredAt,optional"`
	// StudentNumber
	StudentNumber *string `json:"studentNumber,optional"`
}

// The student information response | Student信息返回体
// swagger:model StudentInfoResp
type StudentInfoResp struct {
	BaseDataInfo
	// The student information | Student信息数据
	Data StudentInfo `json:"data"`
}

// The response data of teacher information | Teacher信息
// swagger:model TeacherInfo
type TeacherInfo struct {
	BaseIDInfo
	// Teacher's name | 教师姓名
	Name *string `json:"name,optional"`
	// Teacher's age | 教师年龄
	Age *int32 `json:"age,optional"`
}

// The response data of teacher list | Teacher列表数据
// swagger:model TeacherListResp
type TeacherListResp struct {
	BaseDataInfo
	// Teacher list data | Teacher列表数据
	Data TeacherListInfo `json:"data"`
}

// Teacher list data | Teacher列表数据
// swagger:model TeacherListInfo
type TeacherListInfo struct {
	BaseListInfo
	// The API list data | Teacher列表数据
	Data []TeacherInfo `json:"data"`
}

// Get teacher list request params | Teacher列表请求参数
// swagger:model TeacherListReq
type TeacherListReq struct {
	PageInfo
	// Name
	Name *string `json:"name,optional"`
}

// Teacher information response | Teacher信息返回体
// swagger:model TeacherInfoResp
type TeacherInfoResp struct {
	BaseDataInfo
	// Teacher information | Teacher数据
	Data TeacherInfo `json:"data"`
}
